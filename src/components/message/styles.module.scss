@use "../../styles/breakpoints.scss" as bp;

.message {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;

    max-width: map-get(bp.$breakpoints , tablet);
    height: 100vh;
    // background-color: var(--background);
    z-index: 2;
    padding: 1.618rem;
    padding-bottom: 0;
    box-sizing: border-box;
    margin: 0 auto;

    >div {
        max-width: 520px;
        height: 90%;
        margin: 0 auto;

        position: relative;
        overflow: hidden;

        @media screen and (min-width: map-get(bp.$breakpoints, tablet-wide)) {
            //Desktop
            width: 70%;
        }

        @media screen and (max-width: map-get(bp.$breakpoints, tablet-wide)) {
            //Mobile & Tablet
            width: 100%;
        }

        .conversation {
            padding: 1.618rem;
            padding-bottom: 4.235rem;
            margin: 0;
            height: 100%;
            width: 100%;
            overflow-y: scroll;
            box-sizing: border-box;
            background: var(--chat-background);
            border: solid 1px var(--chat-background);
            border-radius: 10px;

            * {
                font-size: 1rem;
                line-height: 1.618rem;
            }

            ul {
                padding: 0;
            }

            >ul {

                padding: 0;

                li {
                    list-style: none;
                }

                >li {
                    margin-bottom: 1.618rem;
                    width: fit-content;
                    max-width: 70%;
                    padding: 1rem;
                    border-radius: 10px;
                    word-wrap: break-word;
                    opacity: 0;
                    animation: fadeIn 0.3s ease-in 0s 1 forwards;
                }

                .agent {
                    background-color: var(--chat-message-agent-box);

                    span {
                        color: var(--chat-message-agent-text);
                    }
                }

                .client,
                .clientChoice {
                    margin-left: auto;
                }

                .client {
                    background-color: var(--chat-message-client-box);

                    span {
                        color: var(--chat-message-client-text);
                    }
                }

                .clientChoice {
                    // max-width: 0% !important;
                    padding: 0;

                    ul {
                        width: 100%;
                        height: 100%;
                        display: flex;
                        flex-wrap: wrap;
                        justify-content: right;


                        li {
                            background-color: var(--chat-client-choice-box);
                            border-radius: 9999px;
                            padding: 0.618rem 1rem;
                            margin: 0.5rem 0 0.5rem 1rem;
                            width: fit-content;
                            cursor: pointer;
                            user-select: none;
                            animation-name: fadeIn;
                            animation-duration: 0.5s;
                            animation-fill-mode: forwards;


                            $interval: 0.03;
                            opacity: 0;
                            transform: scale(0.95);

                            @for $i from 1 through 30 {
                                &:nth-child(#{$i}) {
                                    $delay: ($interval * $i)+0.5;
                                    animation: fadeIn 0.3s ease-in $delay+s 1 forwards;
                                }
                            }

                            span {
                                color: var(--chat-client-choice-text);
                            }

                            // height: fit-content;
                            // &:last-child {
                            //     margin: 0;
                            // }
                        }
                    }
                }
            }
        }

        .replyInput {
            position: absolute;
            width: 100%;
            height: fit-content;
            min-height: 4.235rem;
            background-color: var(--chat-section-background);
            bottom: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 1rem;
            box-sizing: border-box;
            border-radius: 0 0 10px 10px;

            >div {
                width: 100%;
                height: 100%;
                display: flex;
                justify-content: center;
                align-items: center;

                div {
                    width: 100%;
                    background-color: var(--chat-input-background);
                    border-radius: 1.618rem;
                    display: flex;
                    align-items: center;

                    label {
                        padding-left: 1rem;
                        padding-right: 0.145rem;
                        // font-weight: 800;
                        font-size: 1rem;
                        color: var(--chat-section-background);

                    }

                    input,
                    textarea {
                        width: 100%;
                        // height: 100%;
                        // min-width: 95%;
                        min-height: 2.618rem;
                        border: none;
                        box-sizing: border-box;
                        background: none;
                        outline: none;
                        padding: 0.618rem 1rem;
                        appearance: none;
                        margin: 0;
                    }

                    input::-webkit-outer-spin-button,
                    input::-webkit-inner-spin-button {
                        /* display: none; <- Crashes Chrome on hover */
                        appearance: textfield;
                        -webkit-appearance: none;
                        margin: 0;
                        /* <-- Apparently some margin are still there even though it's hidden */
                    }

                    input[type=number] {
                        appearance: textfield;
                        -moz-appearance: textfield;
                        /* Firefox */
                    }

                    textarea {
                        resize: none;
                        padding: 0.77rem 1rem 0.618rem 1rem;
                        // height: 4rem;
                        // white-space: nowrap;
                        // overflow-x: scroll;
                    }

                    .priceInput {
                        padding-left: 0 !important;
                    }
                }

                button {
                    width: 100%;
                    min-height: 2.618rem;
                    border: none;
                    border-radius: 9999px;
                    cursor: pointer;

                    span {
                        user-select: none;
                    }
                }

                .buttonEnabled {
                    background-color: var(--chat-send-button);

                    span {
                        color: var(--chat-send-button-text);
                    }
                }

                .buttonDisabled {
                    background-color: var(--chat-send-button-disabled);
                    pointer-events: none;

                    span {
                        color: var(--chat-send-button-text-disabled);

                    }
                }

            }

            >:first-child {
                width: 80%;
                padding-right: 0.618rem;
            }

            >:last-child {
                width: 20%;
            }


        }

        .disabled {
            opacity: 0.2;
            pointer-events: none;
        }
    }

}

.show {
    // top: 0;
    opacity: 1;

}

.hide {
    // top: 0;
    opacity: 0;
    pointer-events: none;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        pointer-events: none;
        transform: scale(0.95);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
}