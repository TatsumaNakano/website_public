// .cell {
//     height: 100%;
//     min-width: 0;
// }
@use "../../../styles/breakpoints.scss" as bp;
@use "../../../styles/common.scss" as c;

.gridItem {

    width: 100%;
    height: 100%;
    min-width: 0;
    display: block;
    cursor: pointer;
    text-decoration: none;
    color: var(--primary);
    position: relative;
    box-sizing: border-box;

    border-color: var(--primary);
    background-color: var(--background);

    border-width: 3px;

    transform: scale(1);
    transition: transform var(--transition-speed-fast);

    @include c.box;

    >div {
        @include c.box;
        width: 100%;
        height: 100%;
        background-size: cover;
        background-position: center;
        position: absolute;
        overflow: hidden;
        filter: brightness(1);
        flex-direction: column;
        transition: filter 0.2s ease-out, opacity 1s ease-out;

        z-index: 1;

        // >div {
        //     width: 40%;
        //     max-width: 180px;
        //     max-height: 100%;
        //     position: relative;
        //     display: flex;
        //     justify-content: center;
        //     align-items: center;
        //     ;

        //     >div {
        //         width: 100%;
        //         height: 40%;
        //         background-color: rgb(15, 15, 15);
        //         opacity: 0.9;
        //         position: absolute;
        //         filter: blur(60px);
        //     }

        //     // >div:hover {
        //     //     background-color: rgb(0, 0, 0);
        //     //     opacity: 1;
        //     //     filter: blur(60px);
        //     // }

        //     img {
        //         width: 100%;
        //         z-index: 2;

        //         filter: drop-shadow(0 0 10px #ffffffa4);
        //     }
        // }

        p {
            max-width: 80%;
        }
    }

    >div.cellContext {
        z-index: 2;
        background-color: var(--background);
    }

    >div.cellContext:hover {
        filter: brightness(1.2);
        // transition: filter 0.5s ease-out;
    }

    >div.glow {
        // filter: brightness(5) saturate(5) blur(7px) opacity(0.5);
        // filter: brightness(5) saturate(5) blur(7px) opacity(0.5);
        // transition: filter 2s ease-out, opacity 2s ease-out;
        opacity: 0.5;
        z-index: 0;
        // transition-delay: 0.1s !important;
        mix-blend-mode: hard-light;
    }

    >div.lores {
        min-width: 100% !important;
        min-height: 100% !important;
    }

    >div.loading {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        // background-size: 300% 300%;
        z-index: 1;
        // opacity: 0;
        // animation: ;
        // background-image: linear-gradient(45deg, rgb(10, 10, 10) 0%, rgb(10, 10, 10) 25%, #353535 50%, rgb(10, 10, 10) 75%, rgb(10, 10, 10) 100%);
        animation: AnimateBG 1.5s ease-in-out infinite, FadeIn 1.5s ease-in forwards;
    }



    &:hover {
        div.glow {
            filter: brightness(5) saturate(2) blur(10px);
            // transition: filter 0.3s ease-out, opacity 2s ease-out;
        }

        // transform: scale(1.005);
    }

    label {
        font-size: 1em;
        color: var(--secondary);
    }

    //////////////////////////////////
    // ANIMATION /////////////////////
    //////////////////////////////////

    @keyframes show {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    animation: show 0.5s;

}

.cell {

    @for $i from 1 through 30 {
        &:nth-child(#{$i}) {
            div.loading {
                $delay: (0.4 * $i);
                animation-delay: $delay+s !important;
            }
        }
    }

    // }
}

.show {
    opacity: 1;
    transition: all 0.2s ease-in-out;
}

.hide {
    opacity: 0;
    filter: brightness(0) saturate(0) blur(0px) opacity(0);
    transition: all 0.2s ease-in-out;
}

.main {


    .cellContext {
        flex-direction: column;
        justify-content: center;

        div {
            width: 80%;
        }

        h4 {
            width: 0;
            height: 0;
            opacity: 0;

            span {
                font-size: 0;
            }
        }

        .mainDesc {
            flex-direction: column;
            justify-content: left;

        }


        .imageWrapper {
            // padding-left: 4rem;
            flex-direction: column;
            justify-content: left;
            max-width: 190px;

            img {
                width: 100%;
            }


        }

        p {
            width: 100%;
            height: fit-content;
            text-align: center;
            // margin: 1rem 0 0 0;
            margin: 0;
            filter: drop-shadow(0 0 5px black);

            span {
                display: block;
                width: 90%;

                font-weight: 200;
                text-align: center;
                color: white;
                margin: 0 auto;

                @media screen and (min-width: map-get(bp.$breakpoints, tablet-wide)) {

                    //Desktop
                    font-size: 1.618rem;
                }

                @media screen and (min-width: map-get(bp.$breakpoints, mobile)) and (max-width: map-get(bp.$breakpoints, tablet-wide)) {

                    //Tablet
                    font-size: 1.618rem;
                }

                @media screen and (max-width: map-get(bp.$breakpoints, mobile)) {

                    //Mobile
                    font-size: 1rem;
                }
            }
        }
    }

}

.lab {


    p,
    p>span {
        opacity: 0;
        transition: opacity var(--transition-speed-fast);
        font-size: 1.618rem;
        font-weight: 100;
        color: white;
    }

    &:hover {

        p,
        p>span {
            opacity: 1;
            transition: opacityvar(--transition-speed-fast);
        }
    }

}

.blog {

    .gridItem {
        border: solid 3px var(--primary);
    }

    filter: drop-shadow(0 0 5px rgba(255, 255, 255, 0.5));
    transition: filter 0.2s ease-out;

    &:hover {
        filter: drop-shadow(0 0 10px rgba(255, 255, 255, 0.8));
        transition: filter 0.2s ease-out;
    }



    p,
    p>span {
        font-size: 1.618rem;
        text-align: center;
        font-weight: 100;
    }
}


@keyframes FadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes AnimateBG {
    0% {
        background-color: var(--loading-box-col-A);
    }

    20% {
        background-color: var(--loading-box-col-B);
    }

    70% {
        background-color: var(--loading-box-col-B);
    }

    100% {
        background-color: var(--loading-box-col-A);
    }
}